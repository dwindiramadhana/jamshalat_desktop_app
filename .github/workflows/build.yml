name: 'Build and Release Jam Shalat'

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # Desktop builds
          - platform: 'macos-latest'
            target: 'aarch64-apple-darwin'
            mobile: false
          - platform: 'macos-latest'
            target: 'x86_64-apple-darwin'
            mobile: false
          - platform: 'ubuntu-22.04'
            target: 'x86_64-unknown-linux-gnu'
            mobile: false
          - platform: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            mobile: false
          # Android build
          - platform: 'ubuntu-22.04'
            target: 'aarch64-linux-android'
            mobile: 'android'

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu desktop only)
        if: matrix.platform == 'ubuntu-22.04' && matrix.mobile == false
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup JDK 17 (Android only)
        if: matrix.mobile == 'android'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android Environment (Android only)
        if: matrix.mobile == 'android'
        uses: android-actions/setup-android@v3
        with:
          packages: 'ndk;27.3.13750724'

      - name: Add Rust targets for Android (Android only)
        if: matrix.mobile == 'android'
        run: rustup target add armv7-linux-androideabi i686-linux-android x86_64-linux-android aarch64-linux-android

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup Node.js and cache NPM
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm install

      # --- Android Signing Setup ---
      - name: Decode Android Keystore (Android only)
        if: matrix.mobile == 'android'
        id: decode_keystore
        run: |
          echo "${{ secrets.TAURI_KEY_BASE64 }}" | base64 --decode > jam-shalat-keystore.jks
          echo "keystore_path=$(pwd)/jam-shalat-keystore.jks" >> "$GITHUB_OUTPUT"

      # --- Build Steps ---
      - name: Build Desktop App
        if: matrix.mobile == false
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Jam Shalat v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
          args: ${{ format('--target {0}', matrix.target) }}

      - name: Build Android App
        if: matrix.mobile == 'android'
        run: ./node_modules/.bin/tauri android build
        env:
          VITE_UNSPLASH_ACCESS_KEY: ${{ secrets.VITE_UNSPLASH_ACCESS_KEY }}
          CARGO_TARGET_AARCH64_LINUX_ANDROID_RUNNER: |
            -Pandroid.injected.signing.store.file=${{ steps.decode_keystore.outputs.keystore_path }}
            -Pandroid.injected.signing.store.password=${{ secrets.TAURI_KEY_PASSWORD }}
            -Pandroid.injected.signing.key.alias=${{ secrets.TAURI_KEY_ALIAS }}
            -Pandroid.injected.signing.key.password=${{ secrets.TAURI_KEY_PASSWORD }}

      # --- Artifact Upload ---
      - name: Upload Android Artifact
        if: matrix.mobile == 'android'
        uses: actions/upload-artifact@v4
        with:
          name: jam-shalat-android-signed
          path: src-tauri/gen/android/app/build/outputs/apk/**/*.apk